# Generated by Django 4.0.2 on 2022-03-08 02:03

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtailmarkdown.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterModelOptions(
            name='blogdetailpage',
            options={'ordering': ['-create_date']},
        ),
        migrations.RemoveField(
            model_name='blogdetailpage',
            name='blog_image',
        ),
        migrations.AddField(
            model_name='blogdetailpage',
            name='author',
            field=models.CharField(default='Wang Zhenxuan', max_length=255, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='blogdetailpage',
            name='create_date',
            field=models.DateField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Create date'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogdetailpage',
            name='intro',
            field=ckeditor.fields.RichTextField(default=django.utils.timezone.now, help_text='文章简介', max_length=250),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogdetailpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogdetailpage',
            name='update_date',
            field=models.DateField(auto_now=True, verbose_name='Update date'),
        ),
        migrations.AlterField(
            model_name='blogdetailpage',
            name='content',
            field=wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(form_classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('blockquote', wagtail.core.blocks.BlockQuoteBlock(label='Block Quote')), ('documentchooser', wagtail.documents.blocks.DocumentChooserBlock(label='Document Chooser')), ('url', wagtail.core.blocks.URLBlock(label='URL')), ('embed', wagtail.embeds.blocks.EmbedBlock(label='Embed')), ('rawhtml', wagtail.core.blocks.RawHTMLBlock(label='Raw HTML')), ('table', wagtail.contrib.table_block.blocks.TableBlock(label='Table')), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(label='Markdown')), ('code', wagtail.core.blocks.StructBlock([('language', wagtail.core.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('diff', 'diff'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')], help_text='Coding language', identifier='language', label='Language')), ('code', wagtail.core.blocks.TextBlock(identifier='code', label='Code'))], label='Code')), ('imagedeck', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Add your title', required=True)), ('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=True)), ('text', wagtail.core.blocks.TextBlock(max_length=200, required=True)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_url', wagtail.core.blocks.URLBlock(help_text='If button above is selected, that will be used first', required=False))])))], label='Imagedeck'))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='blogdetailpage',
            name='custom_title',
            field=models.CharField(help_text='文章标题', max_length=80, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='bloglistingpage',
            name='custom_title',
            field=ckeditor.fields.RichTextField(help_text='Overwirtes the default title', max_length=100),
        ),
        migrations.AddField(
            model_name='blogpagetag',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.blogdetailpage'),
        ),
        migrations.AddField(
            model_name='blogpagetag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag'),
        ),
        migrations.CreateModel(
            name='BlogPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='blog.blogdetailpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
